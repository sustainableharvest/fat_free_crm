- amount = account.opportunities.pipeline.map(&:weighted_amount).sum
%li.highlight[account]
  - if account.status
    .strip{:class => account.status} #{account.status.truncate(13).titleize}
  - else
    .strip{:style => "color: gray;"} #{t :other}

  %ul.tools
    = hook(:account_tools_before, self, :account => account)

    - if can?(:update, account)
      %li= link_to_edit(account)

    - if can?(:destroy, account)
      %li= link_to_delete(account)

  .indent
    = link_to(account.name, account)
    - if amount != 0.0
      %span.amount= t(amount.to_i.to_s + " " + (t :bags))
    &ndash;
    %tt
      = account.location << ", " unless account.location.blank?
      / - user_name = account.user.try(:full_name)
      / - if user_name
      /   = t(:added_by, :time_ago => timeago(account.created_at), :user => h(user_name)).html_safe << " | "
      / - else
      /   = t(:added_ago, :value => timeago(account.created_at)).html_safe << " | "
      - if account.category.present?
        %span.category_strip{:class => account.category} #{t account.category}
      - else
        %span.category_strip{:class => :other} #{t :other}
      &ndash;
      = link_to(account.website, account.website.to_url, :target => "_blank") + " - " if account.website.present?
      = t('pluralize.contact', account.contacts.count) << " | "
      = t('pluralize.opportunity', account.opportunities.count)

    %dt
      = link_to_email(account.email) << " | ".html_safe if account.email.present?
      = t(:phone_small) << ": " << (account.toll_free_phone? ? account.toll_free_phone : account.phone) if account.toll_free_phone? || account.phone?

    - if account.tag_list.present?
      %dt
        .tags= tags_for_index(account)

    = hook(:account_bottom, self, :account => account)
